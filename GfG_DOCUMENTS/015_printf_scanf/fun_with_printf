
The character % is followed by one of the following characters.

The flag character
The field width
The precision
The length modifier
The conversion specifier:


What is use of %n in printf() ?
In C printf(), %n is a special format specifier which instead of printing something causes printf() to load the variable pointed by the corresponding argument with a value equal to the number of characters that have been printed by printf() before the occurrence of %n.

#include<stdio.h> 
  
int main() 
{ 
  int c; 
  printf("geeks for %ngeeks ", &c); 
  printf("%d", c); 
  getchar(); 
  return 0; 
} 
The above program prints “geeks for geeks 10”. The first printf() prints “geeks for geeks”. The second printf() prints 10 as there are 10 characters printed (the 10 characters are “geeks for “) before %n in first printf() and c is set to 10 by first printf().



How to change the output of printf() in main() ?
Consider the following program. Change the program so that the output of printf is always 10. It is not allowed to change main(). Only fun() can be changed.

void fun() 
{ 
    // Add something here so that the printf in main prints 10 
}   
int main() 
{ 
    int i = 10; 
    fun(); 
    i = 20; 
    printf("%d", i); 
    return 0; 
}




We can use Macro Arguments to change the output of printf.

#include <stdio.h> 
void fun() 
{ 
   #define printf(x, y) printf(x, 10); 
} 
int main() 
{ 
    int i = 10; 
    fun(); 
    i = 20; 
    printf("%d", i); 
    return 0; 
}
Output:
10

What is the difference between printf, sprintf and fprintf?
printf:
printf function is used to print character stream of data on stdout console.


Syntax :
 int printf(const char* str, ...); 

Example :

// simple print on stdout  
#include<stdio.h> 
int main() 
{ 
   printf("hello geeksquiz"); 
   return 0; 
}
Output :
 hello geeksquiz


sprintf:
Syntax:
int sprintf(char *str, const char *string,...); 
String print function instead of printing on console store it on char buffer which are specified in sprintf

// Example program to demonstrate sprintf() 
#include<stdio.h> 
int main() 
{ 
    char buffer[50]; 
    int a = 10, b = 20, c; 
    c = a + b; 
    sprintf(buffer, "Sum of %d and %d is %d", a, b, c); 
  
    // The string "sum of 10 and 20 is 30" is stored  
    // into buffer instead of printing on stdout 
    printf("%s", buffer); 
  
    return 0; 
} 
Output :
Sum of 10 and 20 is 30


fprintf:
fprintf is used to print the string content in file but not on stdout console.

int fprintf(FILE *fptr, const char *str, ...);
Example :

#include<stdio.h> 
int main() 
{ 
    int i, n=2; 
    char str[50]; 
  
    //open file sample.txt in write mode 
    FILE *fptr = fopen("sample.txt", "w"); 
    if (fptr == NULL) 
    { 
        printf("Could not open file"); 
        return 0; 
    } 
  
    for (i=0; i<n; i++) 
    { 
        puts("Enter a name"); 
        gets(str); 
        fprintf(fptr,"%d.%s\n", i, str); 
    } 
    fclose(fptr); 
  
    return 0; 
} 
Input: GeeksforGeeks
       GeeksQuiz
Output :  sample.txt file now having output as 
0. GeeksforGeeks
1. GeeksQuiz


What is use of %n in printf() ?
In C printf(), %n is a special format specifier which instead of printing something causes printf() to load the variable pointed by the corresponding argument with a value equal to the number of characters that have been printed by printf() before the occurrence of %n.


what it does is it calculates the total no of character already printed ...till %n and then stores the that number in c

#include<stdio.h>   
int main() 
{ 
  int c; 
  printf("geeks for %ngeeks ", &c); 
  printf("%d", c); 
  getchar(); 
  return 0; 
} 
The above program prints “geeks for geeks 10”. The first printf() prints “geeks for geeks”. The second printf() prints 10 as there are 10 characters printed (the 10 characters are “geeks for “) before %n in first printf() and c is set to 10 by first printf().



